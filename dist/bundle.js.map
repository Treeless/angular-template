{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/app.js","bundle.js","src/components/main/main.controller.js","src/components/main/main.module.js","src/components/nav/nav.controller.js","src/components/nav/nav.directive.js","src/components/nav/nav.module.js","src/config/config.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Run","Config","$routeProvider","$locationProvider","$compileProvider","localStorageServiceProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","setPrefix","html5Mode","debugInfoEnabled","angular","run","config","$inject","2","MainController","main","this","DEFAULT_TEXT","text","successClicked","setText","failClicked","reset","status","3","4","NavController","5","directive","restrict","6","7","EnvironmentConfig","envServiceProvider","domains","development","production","vars","check"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,ICAA,WAgBA,QAAAK,MAIA,QAAAC,GAAAC,EAAAC,EAAAC,EAAAC,GACAH,EACAI,KAAA,KACAC,YAAA,yCACAC,WAAA,WACAC,aAAA,SAEAC,WACAC,WAAA,UAGAN,EAAAO,UAAA,WACAT,EAAAU,WAAA,GACAT,EAAAU,kBAAA,GAhCAC,QAAAhB,OAAA,UACA,UACA,aACA,cACA,gBACA,qBACA,eACA,OACA,QAEAiB,IAAAhB,GACAiB,OAAAhB,GAEAD,EAAAkB,WAIAjB,EAAAiB,SAAA,iBAAA,oBAAA,mBAAA,uCCoBMC,GAAG,SAAS9B,EAAQU,EAAOJ,ICtCjC,WAMA,QAAAyB,KACA,GAAAC,GAAAC,IAEAD,GAAAE,aAAA,cACAF,EAAAG,KAAAH,EAAAE,aAEAF,EAAAI,eAAA,WACAJ,EAAAK,QAAA,YAEAL,EAAAM,YAAA,WACAN,EAAAK,QAAA,SAEAL,EAAAO,MAAA,WACAP,EAAAK,QAAA,OAGAL,EAAAK,QAAA,SAAAG,GACA,OAAAA,GACA,IAAA,OACAR,EAAAG,KAAA,oEACA,MACA,KAAA,UACAH,EAAAG,KAAA,yEACA,MACA,SACAH,EAAAG,KAAAH,EAAAE,eA9BAR,QAAAhB,OAAA,sBACAS,WAAA,WAAAY,GAEAA,EAAAF,mBDyEMY,GAAG,SAASzC,EAAQU,EAAOJ,IE7EjC,WACAoB,QAAAhB,OAAA,QAAA,4BFiFMgC,GAAG,SAAS1C,EAAQU,EAAOJ,IGlFjC,WAMA,QAAAqC,MALAjB,QAAAhB,OAAA,qBACAS,WAAA,UAAAwB,GAEAA,EAAAd,mBH0FMe,GAAG,SAAS5C,EAAQU,EAAOJ,II9FjC,WACAoB,QAAAhB,OAAA,iBAAA,mBACAmC,UAAA,SAAA,WACA,OACAC,SAAA,IACA5B,YAAA,0CACAC,WAAA,UACAC,aAAA,iBJoGM2B,GAAG,SAAS/C,EAAQU,EAAOJ,IK3GjC,WACAoB,QAAAhB,OAAA,OAAA,0BL+GMsC,GAAG,SAAShD,EAAQU,EAAOJ,IMhHjC,WAMA,QAAA2C,GAAAC,GACAA,EAAAtB,QACAuB,SACAC,aAAA,aACAC,YAAA,gBAEAC,MACAF,eAEAC,iBAIAH,EAAAK,QAlBA7B,QAAAhB,OAAA,iBAAA,gBACAkB,OAAAqB,GAEAA,EAAApB,SAAA,mCNoIW,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function() {\r\n  angular.module('webapp', [\r\n      'ngRoute',\r\n      'ngSanitize',\r\n      'environment',\r\n      'configuration',\r\n      'LocalStorageModule',\r\n      'ui.bootstrap',\r\n      'main',\r\n      'nav'\r\n    ])\r\n    .run(Run)\r\n    .config(Config);\r\n\r\n  Run.$inject = [];\r\n\r\n  function Run() {};\r\n\r\n  Config.$inject = ['$routeProvider', '$locationProvider', '$compileProvider', 'localStorageServiceProvider'];\r\n\r\n  function Config($routeProvider, $locationProvider, $compileProvider, localStorageServiceProvider) {\r\n    $routeProvider\r\n      .when('/', {\r\n        templateUrl: 'src/components/main/main.template.html',\r\n        controller: 'mainCtrl',\r\n        controllerAs: 'main'\r\n      })\r\n      .otherwise({\r\n        redirectTo: '/oops'\r\n      });\r\n\r\n    localStorageServiceProvider.setPrefix('webapp.');\r\n    $locationProvider.html5Mode(true);\r\n    $compileProvider.debugInfoEnabled(false);\r\n  };\r\n}());\r\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function() {\r\n  angular.module('webapp', [\r\n      'ngRoute',\r\n      'ngSanitize',\r\n      'environment',\r\n      'configuration',\r\n      'LocalStorageModule',\r\n      'ui.bootstrap',\r\n      'main',\r\n      'nav'\r\n    ])\r\n    .run(Run)\r\n    .config(Config);\r\n\r\n  Run.$inject = [];\r\n\r\n  function Run() {};\r\n\r\n  Config.$inject = ['$routeProvider', '$locationProvider', '$compileProvider', 'localStorageServiceProvider'];\r\n\r\n  function Config($routeProvider, $locationProvider, $compileProvider, localStorageServiceProvider) {\r\n    $routeProvider\r\n      .when('/', {\r\n        templateUrl: 'src/components/main/main.template.html',\r\n        controller: 'mainCtrl',\r\n        controllerAs: 'main'\r\n      })\r\n      .otherwise({\r\n        redirectTo: '/oops'\r\n      });\r\n\r\n    localStorageServiceProvider.setPrefix('webapp.');\r\n    $locationProvider.html5Mode(true);\r\n    $compileProvider.debugInfoEnabled(false);\r\n  };\r\n}());\r\n\n},{}],2:[function(require,module,exports){\n(function() {\r\n  angular.module('main.controller', [])\r\n    .controller('mainCtrl', MainController);\r\n\r\n  MainController.$inject = [];\r\n\r\n  function MainController() {\r\n    var main = this;\r\n\r\n    main.DEFAULT_TEXT = \"Hello World\"\r\n    main.text = main.DEFAULT_TEXT;\r\n\r\n    main.successClicked = function() {\r\n      main.setText('success');\r\n    };\r\n    main.failClicked = function() {\r\n      main.setText('fail');\r\n    };\r\n    main.reset = function() {\r\n      main.setText(null);\r\n    };\r\n\r\n    main.setText = function(status) {\r\n      switch (status) {\r\n        case ('fail'):\r\n          main.text = \"<span class='text-danger' id='fail-text'>You have failed :(</span>\"\r\n          break;\r\n        case ('success'):\r\n          main.text = \"<span class='text-success' id='success-text'>You are successful!</span>\"\r\n          break;\r\n        default:\r\n          main.text = main.DEFAULT_TEXT;\r\n          break;\r\n      }\r\n    }\r\n  };\r\n}());\r\n\n},{}],3:[function(require,module,exports){\n(function() {\r\n  angular.module('main', ['main.controller']);\r\n}());\r\n\n},{}],4:[function(require,module,exports){\n(function() {\r\n  angular.module('nav.controller', [])\r\n    .controller('navCtrl', NavController);\r\n\r\n  NavController.$inject = [];\r\n\r\n  function NavController() {\r\n    var nav = this;\r\n  };\r\n}());\r\n\n},{}],5:[function(require,module,exports){\n(function() {\r\n  angular.module('nav.directive', ['nav.controller'])\r\n    .directive('navbar', function() {\r\n      return {\r\n        restrict: 'E',\r\n        templateUrl: '../src/components/nav/nav.template.html',\r\n        controller: 'navCtrl',\r\n        controllerAs: 'nav'\r\n      };\r\n    });\r\n}());\r\n\n},{}],6:[function(require,module,exports){\n(function() {\r\n  angular.module('nav', ['nav.directive']);\r\n}());\r\n\n},{}],7:[function(require,module,exports){\n(function() {\r\n    angular.module(\"configuration\", ['environment'])\r\n      .config(EnvironmentConfig)\r\n\r\n    EnvironmentConfig.$inject = [\"envServiceProvider\"]\r\n\r\n    function EnvironmentConfig(envServiceProvider) {\r\n      envServiceProvider.config({\r\n        domains: {\r\n          development: ['localhost'],\r\n          production: ['example.com']\r\n        },\r\n        vars: {\r\n          development: {\r\n          },\r\n          production: {\r\n          }\r\n        }\r\n      })\r\n      envServiceProvider.check();\r\n    };\r\n}());\r\n\n},{}]},{},[1,7,2,3,4,5,6])\n\n","(function() {\r\n  angular.module('main.controller', [])\r\n    .controller('mainCtrl', MainController);\r\n\r\n  MainController.$inject = [];\r\n\r\n  function MainController() {\r\n    var main = this;\r\n\r\n    main.DEFAULT_TEXT = \"Hello World\"\r\n    main.text = main.DEFAULT_TEXT;\r\n\r\n    main.successClicked = function() {\r\n      main.setText('success');\r\n    };\r\n    main.failClicked = function() {\r\n      main.setText('fail');\r\n    };\r\n    main.reset = function() {\r\n      main.setText(null);\r\n    };\r\n\r\n    main.setText = function(status) {\r\n      switch (status) {\r\n        case ('fail'):\r\n          main.text = \"<span class='text-danger' id='fail-text'>You have failed :(</span>\"\r\n          break;\r\n        case ('success'):\r\n          main.text = \"<span class='text-success' id='success-text'>You are successful!</span>\"\r\n          break;\r\n        default:\r\n          main.text = main.DEFAULT_TEXT;\r\n          break;\r\n      }\r\n    }\r\n  };\r\n}());\r\n","(function() {\r\n  angular.module('main', ['main.controller']);\r\n}());\r\n","(function() {\r\n  angular.module('nav.controller', [])\r\n    .controller('navCtrl', NavController);\r\n\r\n  NavController.$inject = [];\r\n\r\n  function NavController() {\r\n    var nav = this;\r\n  };\r\n}());\r\n","(function() {\r\n  angular.module('nav.directive', ['nav.controller'])\r\n    .directive('navbar', function() {\r\n      return {\r\n        restrict: 'E',\r\n        templateUrl: '../src/components/nav/nav.template.html',\r\n        controller: 'navCtrl',\r\n        controllerAs: 'nav'\r\n      };\r\n    });\r\n}());\r\n","(function() {\r\n  angular.module('nav', ['nav.directive']);\r\n}());\r\n","(function() {\r\n    angular.module(\"configuration\", ['environment'])\r\n      .config(EnvironmentConfig)\r\n\r\n    EnvironmentConfig.$inject = [\"envServiceProvider\"]\r\n\r\n    function EnvironmentConfig(envServiceProvider) {\r\n      envServiceProvider.config({\r\n        domains: {\r\n          development: ['localhost'],\r\n          production: ['example.com']\r\n        },\r\n        vars: {\r\n          development: {\r\n          },\r\n          production: {\r\n          }\r\n        }\r\n      })\r\n      envServiceProvider.check();\r\n    };\r\n}());\r\n"],"sourceRoot":"/source/"}